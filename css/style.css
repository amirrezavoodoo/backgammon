/* Reset and base */
* { margin: 0; padding: 0; box-sizing: border-box; }

html, body { height: 100%; }
body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #2f2f2f 0%, #5a4b3a 100%);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  -webkit-text-size-adjust: 100%;
  overflow-x: hidden; /* prevent horizontal scroll */
  overscroll-behavior-y: contain;
}

/* Fluid sizing variables */
:root {
  /* Core geometry */
  --point-w: clamp(34px, 5vw, 50px);
  --point-h: clamp(180px, 30vh, 280px);
  --checker-size: clamp(28px, 4.5vw, 40px);
  --stack-gap: clamp(2px, 0.6vw, 6px);
  --stack-step: calc(var(--checker-size) + var(--stack-gap)); /* JS will read this */

  /* Layout */
  --board-gap: clamp(8px, 2vw, 20px);
  --board-padding: clamp(10px, 2.6vw, 20px);
  --ui-scale: 1; /* JS will adjust this to fit viewport */
  --shell-max-w: 100vw;
  --shell-max-h: 100vh;

  /* Colors and effects */
  --glass-bg: rgba(255,255,255,0.06);
  --glass-border: rgba(255,255,255,0.12);
}

/* App shell scales the whole UI to fit viewport */
.app-shell {
  width: 100%;
  max-width: var(--shell-max-w);
  height: 100%;
  max-height: var(--shell-max-h);
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: env(safe-area-inset-top) 8px env(safe-area-inset-bottom) 8px;
  transform: scale(var(--ui-scale));
  transform-origin: top center;
  will-change: transform;
}

/* HUD */
.hud {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 12px;
}

.messages { min-height: 36px; }

.controls {
  display: inline-flex;
  gap: 12px;
}

.roll-button, .undo-button {
  padding: 12px 22px;
  border: none;
  border-radius: 12px;
  background: #2f7d32;
  color: #fff;
  font-weight: 600;
  cursor: pointer;
  transition: transform 160ms ease, box-shadow 160ms ease, opacity 120ms ease;
}
.undo-button { background: #6b4c3b; }
.roll-button:disabled, .undo-button:disabled {
  opacity: 0.6;
  cursor: default;
}
.roll-button:hover:not(:disabled), .undo-button:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 12px 30px rgba(0,0,0,0.25);
}

/* Board wrapper/area */
.board-wrapper {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.board {
  background: #d8c3aa;
  padding: var(--board-padding);
  border-radius: 15px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.5);
  display: grid;
  grid-template-columns: auto auto auto; /* left | bar/bearoffs | right */
  gap: var(--board-gap);
  position: relative;
  max-width: 100vw;
}
/* Keep board from growing off-screen vertically on very narrow viewports.
   Use an aspect-ratio and allow internal scrolling when necessary so the overall
   page doesn't become extremely tall. */
.board {
  width: min(96vw, 1100px);
  aspect-ratio: 1.8 / 1; /* wide board by default; allows height control */
  max-height: calc(100vh - 160px);
  overflow: auto;
}

/* Sections */
.board-section {
  display: flex;
  flex-direction: column;
}

.board-row {
  display: flex;
}

/* Points */
.point {
  width: var(--point-w);
  height: var(--point-h);
  position: relative;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.point::before {
  content: '';
  position: absolute;
  width: 100%; height: 100%;
}

.point.top::before { clip-path: polygon(50% 100%, 0% 0%, 100% 0%); }
.point.bottom::before { clip-path: polygon(50% 0%, 0% 100%, 100% 100%); }

.point:nth-child(odd)::before { background: #6b4c3b; }
.point:nth-child(even)::before { background: #d9b382; }

.point.possible { animation: pulse 1s infinite; }
.point.selected-highlight { box-shadow: inset 0 0 20px rgba(255, 215, 0, 0.5); }

/* Checkers */
.checker {
  width: var(--checker-size);
  height: var(--checker-size);
  border-radius: 50%;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  border: 3px solid rgba(0,0,0,0.3);
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  z-index: 1;
  transition: box-shadow 0.3s ease, top 0.3s ease, bottom 0.3s ease;
  display: flex; align-items: center; justify-content: center;
  font-size: 14px; font-weight: bold;
}
.checker.white {
  background: radial-gradient(circle at 30% 30%, #fff, #e0e0e0);
  color: #333;
}
.checker.black {
  background: radial-gradient(circle at 30% 30%, #4a4a4a, #1a1a1a);
  color: white;
}
.checker:hover {
  transform: translateX(-50%) scale(1.06);
  box-shadow: 0 4px 12px rgba(0,0,0,0.5);
  z-index: 10;
}
.checker.selected {
  box-shadow: 0 0 0 4px gold, 0 4px 12px rgba(0,0,0,0.5);
  z-index: 100;
  animation: selectedPulse 1s infinite;
}
.checker.animating {
  z-index: 1000;
  transition: transform 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Bar and bear-offs */
.bar-and-bearoffs {
  display: grid;
  grid-template-rows: 1fr auto auto;
  align-items: center;
  justify-items: center;
  gap: calc(var(--board-gap) / 2);
  min-width: calc(var(--point-w) + 8px);
}
.bar, .bear-off {
  width: calc(var(--point-w) + 6px);
  min-height: calc(var(--checker-size) * 3);
  background: var(--glass-bg);
  border: 1px solid rgba(255,255,255,0.06);
  backdrop-filter: blur(4px);
  border-radius: 10px;
}
.bear-off.possible {
  box-shadow: 0 0 18px 6px rgba(76,175,80,0.12), inset 0 0 12px rgba(76,175,80,0.04);
}

/* Dice canvas positioning */
.dice-container {
  position: absolute;
  left: 8px;
  top: 8px;
  transform: scale(0.9);
  transform-origin: left top;
  pointer-events: none;
}
#dice3d { display: block; }

/* Messages glass look */
.message {
  background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.03));
  border: 1px solid var(--glass-border);
  backdrop-filter: blur(6px) saturate(1.08);
  -webkit-backdrop-filter: blur(6px) saturate(1.08);
  padding: 12px 16px;
  border-radius: 12px;
  color: #fff;
  display: inline-flex;
  gap: 10px; align-items: center;
}
@keyframes msgIn { 0% { transform: translateY(-8px); opacity: 0; } 100% { transform: translateY(0); opacity: 1; } }
.message.enter { animation: msgIn 360ms cubic-bezier(.22,1,.36,1) forwards; }

/* Animations reused */
@keyframes pulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7); transform: scale(1); }
  50% { box-shadow: 0 0 0 10px rgba(76, 175, 80, 0); transform: scale(1.05); }
}
@keyframes selectedPulse {
  0%, 100% { transform: translateX(-50%) scale(1); }
  50% { transform: translateX(-50%) scale(1.15); }
}
@keyframes bearOffPulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba(255, 215, 0, 0.9); }
  50% { box-shadow: 0 0 0 15px rgba(255, 215, 0, 0); }
}

/* Responsive rules */
/* تا 768px برد را دو ستونی نگه می‌داریم؛ فقط زیر 480px ستونی می‌شود */
@media (max-width: 768px) {
  .dice-container { transform: scale(0.75); }
}
@media (max-width: 560px) {
  .board { grid-template-columns: auto auto; }
  .bar-and-bearoffs { grid-template-rows: auto auto auto; }
}
@media (max-width: 480px) {
  /* On very small screens show a tall single-column board but cap height
     and allow internal scroll; this prevents the whole page from becoming
     extremely long and keeps controls accessible. */
  .board { grid-template-columns: 1fr; max-height: calc(100vh - 140px); aspect-ratio: 0.9 / 1; }
  .bar-and-bearoffs { grid-template-columns: 1fr; grid-template-rows: auto auto auto; }
  .roll-button { padding: 12px 18px; font-size: 16px; }
}

/* Accessibility: reduce motion */
@media (prefers-reduced-motion: reduce) {
  * { animation: none !important; transition: none !important; }
}

/* اگر لازم بود Undo مخفی شود، این را فعال کنید:
#undoButton, .undo-button { display: none !important; }
*/
